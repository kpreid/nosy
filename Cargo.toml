[workspace]
members = ["xtask"]

[package]
name = "nosy"
version = "0.2.0"
edition = "2024"
rust-version = "1.85.0"
description = "Change notification / observation / broadcast channels, with filtering and coalescing. no_std compatible."
repository = "https://github.com/kpreid/nosy/"
license = "MIT OR Apache-2.0"
categories = ["asynchronous", "no-std"]
keywords = ["change-notification", "listener", "observer", "observable"]
include = ["/src", "/tests", "/CHANGELOG.md", "/README.md", "/LICENSE-APACHE", "/LICENSE-MIT", "!.*"]

[package.metadata.docs.rs]
all-features = true

[lib]
test = false # All tests are currently in tests/api/ instead

[features]
default = []
# Enables trait implementations on `std` types, rather than only `alloc` types.
std = []
# Enables use of `std::sync` to implement `Sync` for our types.
sync = []
# Enables async integration.
async = ["dep:futures-core", "dep:futures-util"]

[dependencies]
arrayvec = { version = "0.7.4", default-features = false }
futures-core = { version = "0.3.31", optional = true, default-features = false }
futures-util = { version = "0.3.31", optional = true, default-features = false }
cfg-if = { version = "1.0.0", default-features = false }
mutants = { version = "0.0.3", default-features = false }

[dev-dependencies]
# For examples
futures = { version = "0.3.31" }
# For tests of `Debug` printing.
indoc = { version = "2.0.1", default-features = false }
# For tests of `Debug` printing.
pretty_assertions = "1.2.0"
# For tests of what auto traits our types have.
static_assertions = "1.1.0"
